h2(#summary). Summary

Constructable object available in [[Bondi|Bondi Reference]]

h2(#syntax). Syntax

h2(#parameters). Parameters

h2(#description). Description

h2(#object-instances). TemplateEngine Instances

h3(#object-properties). Properties

- DataSource
- Input
- QueryString
- RootDirectory := =:

h3(#object-methods). Methods

- AddData()
- AddDataset()
- AddMacro()
- AddProperty()
- Execute()
- ExecuteToString() := =:

h2(#examples). Examples
<pre><code>
  var T = new TemplateEngine();
  T.RootDirectory = TemplateDirectories();
  T.DataSource = Db;
  T.Input = "/merchant/search.ezitpl";
  T.AddProperty("securehost", Request.ServerVariables.HTTP_HOST);
  T.AddDataset("merchantaccounts", MerchantList);
  T.AddDataset("results", SearchResults);
  T.AddData("/common.ezisql");
  T.AddMacro("/common.ezimac");
  T.Execute();
</code></pre>

It is possible to apply control constructs to templates which allow you to customize presentation to your liking. E.g you might want to iterate over a dataset and display the values and apply a style to every second row in a table that represents that dataset.

The following snippet demonstrates iterating over a dataset named "PersonDataset" starting from a particular row and proceeding count rows beyond that. This is useful for implementing a paged view.

Note the c and p variables come from the QueryString which is added to the particular instance of the Template engine via something like
<pre><code>
var T = TemplateEngine();
T.QueryString = Request.QueryString;
</code></pre>

The position variable is an internal TemplateEngine variable which maintains the current row index which you could use in conjunction with the modulus operator to colour every second row.

<pre><code>
<tbody>
  {for PersonDataset start={notblank((p - 1)*notblank(c,10) + 1,1)} count={notblank(c,10)}}
  <tr {if (position % 2=0)} class="prettyrow" {/if}>
    <td><span>{PersonDataSet.Name}</span></td>
    <td><span>{PersonDataSet.Age}</span></td>
  {/for}
  <tr>
</tbody>
</code></pre>


h2(#seealso). See also